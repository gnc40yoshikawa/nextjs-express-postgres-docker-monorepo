services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    tty: true
    ports:
      - "3000:3000"
    volumes:
      - type: bind
        source: ./web
        target: /web           # コードをbind mount（ホットリロード）
      # - /app/node_modules         # node_modulesはコンテナ内
    depends_on:
      - api

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    tty: true
    ports:
      - "4000:4000"
    volumes:
      - type: bind
        source: ./api
        target: /api           # コードをbind mount（ホットリロード）
      # - /app/node_modules         # node_modulesはコンテナ内
    depends_on:
      db:
        condition: service_healthy

  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    tty: true
    ports:
      - "5432:5432"
    volumes:
      - db-store:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      # 起動時・接続時に動的変更可能なためこちらで設定
      TZ: Asia/Tokyo
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  db-store: